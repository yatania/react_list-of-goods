{"version":3,"sources":["components/Button/Button.jsx","components/GoodsList/GoodsList.jsx","App.js","index.js"],"names":["Button","React","memo","onClick","text","className","type","propTypes","PropTypes","func","isRequired","string","GoodsList","state","goods","props","initialGoods","reverseGoogs","setState","prevState","reverse","sortByAlphabet","sort","a","b","localeCompare","sortByNameLength","length","reset","this","map","product","key","PureComponent","goodsFromServer","App","isVisible","toStart","preveState","ReactDOM","render","document","getElementById"],"mappings":"oPAGaA,EAASC,IAAMC,MAC1B,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,UAAlB,OACE,4BACEC,KAAK,SACLD,UAAS,iBAAYA,GACrBF,QAASA,GAERC,MAKPJ,EAAOO,UAAY,CACjBJ,QAASK,IAAUC,KAAKC,WACxBN,KAAMI,IAAUG,OAAOD,WACvBL,UAAWG,IAAUG,OAAOD,YCdvB,IAAME,EAAb,4MACEC,MAAQ,CACNC,MAAO,EAAKC,MAAMD,OAFtB,EAKEE,aALF,YAKqB,EAAKD,MAAMD,OALhC,EAOEG,aAAe,WACb,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAAOM,eATlC,EAaEC,eAAiB,WACf,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAAOQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,WAfjE,EAmBEE,iBAAmB,WACjB,EAAKR,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAAOQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,eArB9D,EAyBEC,MAAQ,WACN,EAAKV,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAM,YAAK,EAAKE,mBA3BtB,4CA+BE,WAAU,IAAD,OACCF,EAAUe,KAAKhB,MAAfC,MAER,OACE,yBAAKT,UAAU,sCACb,wBAAIA,UAAU,iBACXS,EAAMgB,KAAI,SAAAC,GAAO,OAChB,wBACEC,IAAKD,EACL1B,UAAU,aAET0B,OAIP,yBAAK1B,UAAU,WACb,kBAACL,EAAD,CACEG,QAAS,kBAAM,EAAKc,gBACpBb,KAAK,UACLC,UAAU,eAEZ,kBAACL,EAAD,CACEG,QAAS,kBAAM,EAAKkB,kBACpBjB,KAAK,sBACLC,UAAU,eAEZ,kBAACL,EAAD,CACEG,QAAS,kBAAM,EAAKyB,SACpBxB,KAAK,QACLC,UAAU,cAEZ,kBAACL,EAAD,CACEG,QAAS,kBAAM,EAAKuB,oBACpBtB,KAAK,iBACLC,UAAU,qBAjEtB,GAA+B4B,iBCCzBC,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAuCaC,E,4MAnCbtB,MAAQ,CACNuB,WAAW,G,EAGbC,QAAU,WACR,EAAKnB,UAAS,SAAAoB,GAAU,MAAK,CAC3BF,WAAYE,EAAWF,e,4CAI3B,WAAU,IAAD,OACCA,EAAcP,KAAKhB,MAAnBuB,UAER,OACE,yBAAK/B,UAAU,OACb,wBAAIA,UAAU,SAAd,iBAGC+B,EAEG,kBAAC,EAAD,CAAWtB,MAAOoB,IAGlB,kBAAClC,EAAD,CACEI,KAAK,QACLD,QAAS,kBAAM,EAAKkC,WACpBhC,UAAU,oC,GA3BN4B,iBCdlBM,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b818a98b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = React.memo(\n  ({ onClick, text, className }) => (\n    <button\n      type=\"button\"\n      className={`button ${className}`}\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  ),\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../Button';\n\nexport class GoodsList extends PureComponent {\n  state = {\n    goods: this.props.goods,\n  }\n\n  initialGoods = [...this.props.goods];\n\n  reverseGoogs = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].reverse(),\n    }));\n  }\n\n  sortByAlphabet = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => a.localeCompare(b)),\n    }));\n  }\n\n  sortByNameLength = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  reset = () => {\n    this.setState(prevState => ({\n      goods: [...this.initialGoods],\n    }));\n  }\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div className=\"box has-background-link-light  p-6\">\n        <ul className=\"card p-4 mb-4\">\n          {goods.map(product => (\n            <li\n              key={product}\n              className=\"is-size-5\"\n            >\n              {product}\n            </li>\n          ))}\n        </ul>\n        <div className=\"buttons\">\n          <Button\n            onClick={() => this.reverseGoogs()}\n            text=\"Reverse\"\n            className=\"is-warning\"\n          />\n          <Button\n            onClick={() => this.sortByAlphabet()}\n            text=\"Sort alphabetically\"\n            className=\"is-warning\"\n          />\n          <Button\n            onClick={() => this.reset()}\n            text=\"Reset\"\n            className=\"is-danger\"\n          />\n          <Button\n            onClick={() => this.sortByNameLength()}\n            text=\"Sort by length\"\n            className=\"is-warning\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport { GoodsList } from './components/GoodsList';\nimport { Button } from './components/Button';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends PureComponent {\n  state = {\n    isVisible: false,\n  }\n\n  toStart = () => {\n    this.setState(preveState => ({\n      isVisible: !preveState.isVisible,\n    }));\n  }\n\n  render() {\n    const { isVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">\n          List of goods\n        </h1>\n        {isVisible\n          ? (\n            <GoodsList goods={goodsFromServer} />\n          )\n          : (\n            <Button\n              text=\"Start\"\n              onClick={() => this.toStart()}\n              className=\"button isCenter is-success\"\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}